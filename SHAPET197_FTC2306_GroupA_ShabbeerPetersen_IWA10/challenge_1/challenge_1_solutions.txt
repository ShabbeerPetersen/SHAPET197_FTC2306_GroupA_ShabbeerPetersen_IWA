const currentYear = new Date().getFullYear()

const holidays = {
    0: {
        id: 0,
        name: 'Day of Reconciliation',
        date: `16 December ${currentYear}`,
    },
    // ... (other holiday entries)
    8: {
        id: 8,
        name: 'Human Rights Day',
        date: new Date(`21 March ${currentYear}`)
    },
}

const christmas = 6
const futureId = 9

// Do not change code above this comment

console.log(holidays[futureId] ? holidays[futureId].name : `ID ${futureId} not created yet`)

let copied = { ...holidays[christmas] }
copied.name = 'X-mas Day'
let correctDate = new Date(copied.date)
correctDate.setHours(0)
correctDate.setMinutes(0)
let isEarlier = copied.date < holidays[6].date
console.log('New date is earlier:', isEarlier)
if (isEarlier) copied.date = correctDate
console.log('ID change:', holidays[christmas].id !== copied.id || copied.id)
console.log('Name change:', holidays[christmas].name !== copied.name || copied.name)
console.log('Date change:', holidays[christmas].date !== copied.date || copied.date)

const holidayTimestamps = Object.values(holidays).map(holiday => holiday.date.getTime())

const firstHolidayTimestamp = Math.min(...holidayTimestamps)
const lastHolidayTimestamp = Math.max(...holidayTimestamps)

const firstDay = new Date(firstHolidayTimestamp).getDate()
const firstMonth = new Date(firstHolidayTimestamp).getMonth() + 1
const lastDay = new Date(lastHolidayTimestamp).getDate()
const lastMonth = new Date(lastHolidayTimestamp).getMonth() + 1

console.log(`${firstDay.toString().padStart(2, '0')}/${firstMonth.toString().padStart(2, '0')}/${currentYear}`)
console.log(`${lastDay.toString().padStart(2, '0')}/${lastMonth.toString().padStart(2, '0')}/${currentYear}`)

const randomHolidayIndex = Math.floor(Math.random() * Object.keys(holidays).length)
const randomHoliday = holidays[randomHolidayIndex]
console.log(randomHoliday.date)
